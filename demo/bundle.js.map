{"version":3,"file":"bundle.js","sources":["webpack://simpledropit/./src/helpers.js","webpack://simpledropit/./src/index.js","webpack://simpledropit/./dev/index.js"],"sourcesContent":["// Helper functions\r\nexport function getElementDocument(element) {\r\n    if (!element || !element.ownerDocument) {\r\n        return document;\r\n    }  \r\n    return element.ownerDocument;\r\n}\r\n\r\nexport function hasClass(element, className) {\r\n    if(element) {\r\n        return element.classList.contains(className);\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function triggerClick(element) {\r\n    if(element.click) {\r\n        element.click();\r\n    } else if(document.createEvent) {\r\n        var eventObj = document.createEvent('MouseEvents');\r\n        eventObj.initEvent('click', true, true);\r\n        element.dispatchEvent(eventObj);\r\n    }\r\n}","import {getElementDocument, hasClass, triggerClick } from './helpers';\r\n\r\nclass SimpleDropit {\r\n\r\n    /**\r\n     * SimpleDropit Object\r\n     * @param {String} selector Element object\r\n     * @param {Object} options User options\r\n     */\r\n    constructor(selector, options) {\r\n        try {\r\n            if(typeof selector === 'string') {\r\n                throw new Error('Invalid Element Object.');\r\n            } else if(typeof selector === 'object' && selector !== null) {\r\n                this.el = selector;\r\n            } else {\r\n                throw new Error('Element Object does not exists.');\r\n            }\r\n        } catch(error) {\r\n            console.error(error.name + ': ' + error.message);\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        this.options = { ...SimpleDropit.defaultOptions, ...options };\r\n        this.classNames = {\r\n            ...SimpleDropit.defaultOptions.classNames,\r\n            ...this.options.classNames\r\n        };\r\n\r\n        if (SimpleDropit.instances.has(this.el)) {\r\n            return;\r\n        }\r\n        this.init();\r\n    }\r\n\r\n    isAdvancedUpload = () => {\r\n        var div = document.createElement('div');\r\n        return (('draggable' in div) || ('ondragstart' in div && 'ondrop' in div)) && 'FormData' in window && 'FileReader' in window;\r\n    };\r\n\r\n    onChange = (event) => {\r\n        this.boxEl.classList.add('is-dropped');\r\n        SimpleDropit.showFiles(this.filenameEl, event.target.files);\r\n    };\r\n\r\n    dragIn = (event) => {\r\n        if(!hasClass(this.boxEl, 'is-dragover')) this.boxEl.classList.add('is-dragover');\r\n    };\r\n\r\n    dragOut = (event) => {\r\n        if(hasClass(this.boxEl, 'is-dragover')) this.boxEl.classList.remove('is-dragover');\r\n    };\r\n\r\n    drop = (event) => {\r\n        this.boxEl.classList.add('is-dropped');\r\n        this.droppedFiles = event.dataTransfer.files;\r\n        SimpleDropit.showFiles(this.filenameEl, this.droppedFiles);\r\n    };\r\n\r\n    preventEventPropagation = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    static instances = new WeakMap();\r\n\r\n    init() {\r\n        // Save a reference to the instance, so we know this DOM node has already been instanciated\r\n        SimpleDropit.instances.set(this.el, this);\r\n\r\n        this.initDom();\r\n        this.initListeners();\r\n    }\r\n\r\n    initDom() {\r\n\r\n        // Assuring this element doesn't have the wrapper elements yet\r\n        if(this.el.closest('.' + this.classNames.boxEl) !== null) {\r\n            // Assume that element has his DOM already initiated\r\n            this.boxEl = this.el.closest('.' + this.classNames.boxEl);\r\n            this.boxWrapperEl = this.boxEl.querySelector('.' + this.classNames.boxWrapperEl);\r\n            this.labelWrapperEl = this.boxEl.querySelector('.' + this.classNames.labelWrapperEl);\r\n            this.supportedLabelEl = this.boxEl.querySelector('.' + this.classNames.supportedLabelEl);\r\n            this.filenameEl = this.boxEl.querySelector('.' + this.classNames.filenameEl);\r\n            this.browseLabelEl = this.boxEl.querySelector('.' + this.classNames.browseLabelEl);\r\n        } else {\r\n            // Prepare DOM\r\n            const elClone = this.el.cloneNode(true);\r\n\r\n            this.boxEl = document.createElement('div');\r\n            this.boxWrapperEl = document.createElement('div');\r\n            this.labelWrapperEl = document.createElement('div');\r\n            this.supportedLabelEl = document.createElement('span');\r\n            this.filenameEl = document.createElement('span');\r\n            this.browseLabelEl = document.createElement('label');\r\n\r\n            this.boxEl.classList.add(this.classNames.boxEl);\r\n            this.boxWrapperEl.classList.add(this.classNames.boxWrapperEl);\r\n            this.labelWrapperEl.classList.add(this.classNames.labelWrapperEl);\r\n            this.supportedLabelEl.classList.add(this.classNames.supportedLabelEl);\r\n            this.filenameEl.classList.add(this.classNames.filenameEl);\r\n            this.browseLabelEl.classList.add(this.classNames.browseLabelEl);\r\n\r\n            this.el.classList.add('sdd-file-input', 'sdd-file-input-hide');\r\n\r\n            this.supportedLabelEl.innerHTML = this.options.supportedLabel+'&nbsp;';\r\n            this.labelWrapperEl.appendChild(this.supportedLabelEl);\r\n            this.labelWrapperEl.appendChild(this.filenameEl);\r\n            this.browseLabelEl.innerHTML = 'Browse <span class=\"sdd-box-browse-file\">File</span></span>';\r\n            this.labelWrapperEl.appendChild(this.browseLabelEl);\r\n            this.labelWrapperEl.appendChild(elClone);\r\n            this.boxWrapperEl.appendChild(this.labelWrapperEl);\r\n            this.boxEl.appendChild(this.boxWrapperEl);\r\n\r\n            this.el.after(this.boxEl);\r\n            \r\n            this.el.remove();\r\n            this.el = elClone;\r\n        }\r\n\r\n        if(this.isAdvancedUpload) {\r\n            this.boxEl.classList.add('sdd-advanced-upload');\r\n        }\r\n    }\r\n\r\n    initListeners() {\r\n        ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(e => {\r\n            getElementDocument(this.boxEl).addEventListener(e, this.preventEventPropagation, false);\r\n            this.boxEl.addEventListener(e, this.preventEventPropagation, false);\r\n        });\r\n        ['dragenter', 'dragover'].forEach(e => {\r\n            getElementDocument(this.boxEl).addEventListener(e, this.dragIn, true);\r\n        });\r\n        ['dragleave', 'drop'].forEach(e => {\r\n            getElementDocument(this.boxEl).addEventListener(e, this.dragOut, true);\r\n        });\r\n        this.boxEl.addEventListener('drop', this.drop, true);\r\n        this.el.addEventListener('change', this.onChange, true);\r\n        this.browseLabelEl.addEventListener('click', event => { triggerClick(this.el); });\r\n    }\r\n\r\n    static showFiles(el, files) {\r\n        el.innerText = files.length > 1 ? (files.length + ' files selected / ') : files[ 0 ].name + ' / ';\r\n    }\r\n\r\n    static defaultOptions = {\r\n        supportedLabel: 'Drag & Drop file or',\r\n        classNames: {\r\n            boxEl: 'sdd-input-file-box',\r\n            boxWrapperEl: 'sdd-input-file-box-wrapper',\r\n            labelWrapperEl: 'sdd-input-file-label',\r\n            supportedLabelEl: 'sdd-box-dragndrop',\r\n            filenameEl: 'sdd-box-file-name',\r\n            browseLabelEl: 'sdd-label'\r\n        }\r\n    };\r\n}\r\n\r\nexport default SimpleDropit;","import SimpleDropit from '../src/index';\r\n\r\nconst simpleDropit1 = new SimpleDropit(document.getElementById('sdd-fileinput2'));\r\nconst simpleDropit2 = new SimpleDropit(document.getElementById('sdd-fileinput1'));"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AADA;AA6BA;AACA;AACA;AACA;AAhCA;AAkCA;AACA;AAAA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AAzCA;AA2CA;AACA;AACA;AA7CA;AA+CA;AACA;AAAA;AACA;AACA;AACA;AAnDA;AAqDA;AACA;AACA;AACA;AAvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAgCA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;;;;;;AA/IA;AACA;AADA;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AACA;AAYA;;AChKA;AAEA;AACA;;A","sourceRoot":""}